<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/instructors.css" />
    <title>Dashboard</title>
  </head>
  <body>
    <%- include('partials/sidebar') %>
      <!-- MAIN -->
      <main>
        <!-- Instructors List Section -->
        <section class="Instructor-list-section">
          <div class="table-container">
            <div class="table-header">
              <h2>Instructors List</h2>
              <button class="btn-add-instructor" id="open-popup">
                <i class="bx bx-plus"></i> Add Instructor
              </button>
            </div>

            <div class="table-controls">
              <label for="show-entries">Show
                <select id="show-entries">
                  <option value="1">1</option>
                  <option value="5">5</option>
                  <option value="10">10</option>
                </select>
                Entries
              </label>
              <div class="search-box">
                <input type="text" placeholder="Search" />
                <i class="bx bx-search"></i>
              </div>
            </div>
            <table class="instructor-table">
              <thead>
                <tr>
                  <th>#</th>
                  <th>InstructorID</th>
                  <th>Name</th>
                  <th>Subjects</th>
                  <th>Password</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody id="instructor-table-body">
                <% if (instructors && instructors.length > 0) { %>
                  <% instructors.forEach((instructors, index) => { %>
                    <tr>
                      <td><%= index + 1 %></td>
                      <td><%= instructor.instructorId %></td>
                      <td><%= instructor.fname %></td>
                      <td><%= instructor.subjects %></td>
                      <td><%= instructor.password %></td> 
                      <td>
                        <i class="bx bx-show"></i>
                        <i class="bx bx-edit"></i>
                        <i class="bx bx-trash"></i>
                      </td>
                    </tr>
                  <% }); %>
                <% } else { %>
                  <tr>
                    <td colspan="6">No instructors found.</td>
                  </tr>
                <% } %>
              </tbody>
            </table>
                      
            <div class="table-footer">
              <p id="table-footer">Showing 1 entries</p>
              <div class="pagination">
                <button class="btn-pagination" onclick="loadInstructors()">Refresh</button>
              </div>
            </div>
          </div>
        </section>

        <!-- Add Instructor Modal (Hidden by default) -->
        <div class="modal-bg" id="add-instructor-modal">
          <div class="modal-content-horizontal">
            <div class="modal-header">
              <h2><i class="bx bx-plus"></i> Add Instructor</h2>
              <span id="close-popup" class="close-btn">&times;</span>
            </div>
            <form class="add-instructor-form" action="/instructors" method="POST">
              <!-- Form Fields -->
              <div class="form-fields">
                <div class="input-group">
                  <label for="section">Select Section</label>
                  <select id="section" name="section">
                    <option value="1"></option>
                    <option value="BSIT - 1A">BSIT - 1A</option>
                    <option value="BSIT - 1B">BSIT - 2A</option>
                  </select>
                </div>

                <div class="input-group">
                  <label for="instructor-id">Instructor ID</label>
                  <input type="text" id="instructor-id" name="instructorId" placeholder="ID" />
                </div>

                <div class="input-group">
                  <label for="instructor-name">Instructor Name</label>
                  <input type="text" id="instructor-name" name="funame" placeholder="Name" />
                </div>

                <div class="input-group">
                  <label for="password">Instructor password</label>
                  <input type="text" id="instructor-password" name="password" placeholder="Password" />
                </div>
              </div> 

              <div class="input-group">
                <label for="description">Instructor Subjects</label>
                <textarea type="text" id="Subjects" name="subjects" placeholder="Subjects"></textarea>
              </div>

              <!-- Image Upload Section -->
              <div class="input-group">
                <label for="instructor-image">Instructor Image</label>
                <input type="file" id="instructor-image" accept="image/*" />
              </div>

              <!-- Action Buttons -->
              <div class="form-actions">
                <button type="submit" class="btn-add">Add</button>
                <button type="button" id="cancel-btn" class="btn-cancel">
                  Cancel
                </button>
              </div>
            </form>
          </div>
        </div>
      </main>

      <script>
        const openPopup = document.getElementById("open-popup");
        const closePopup = document.getElementById("close-popup");
        const modal = document.getElementById("add-instructor-modal");
        const cancelBtn = document.getElementById("cancel-btn");

        openPopup.addEventListener("click", () => {
          modal.style.display = "flex";
        });

        closePopup.addEventListener("click", () => {
          modal.style.display = "none";
        });

        cancelBtn.addEventListener("click", () => {
          modal.style.display = "none";
        });

        window.addEventListener("click", (event) => {
          if (event.target == modal) {
            modal.style.display = "none";
          }
        });

        // Get all edit buttons
        const editButtons = document.querySelectorAll(".bx-edit");

        // Loop through all edit buttons and add event listeners
        editButtons.forEach((button, index) => {
          button.addEventListener("click", (event) => {
            // Open modal
            modal.style.display = "flex";

            // Change modal title and button text to "Edit Product"
            document.querySelector(".modal-header h2").innerHTML =
              '<i class="bx bx-edit"></i> Edit Product';
            document.querySelector(".btn-add").textContent = "Save Changes";

            // Here you should get the relevant product data, e.g., from a row or an API
            const instructorRow = event.target.closest("tr"); // Get the parent row of the clicked button
            const instructorData = {
              instructortId: instructorRow.cells[1].textContent,
              subjects: instructorRow.cells[2].textContent,
              name: instructorRow.cells[3].textContent,
              password: instructorRow.cells[4].textContent,
            };

            // Populate the form fields with existing product data
            document.getElementById("instructorId").value = instructorData.instructorId;
            document.getElementById("instructor-name").value = instructorData.name;
            document.getElementById("password").value = instructorData.password;
            document.getElementById("subjects").value = instructorData.subjects;

            // If necessary, populate the description or any additional fields
            // document.getElementById("description").value = productData.description;
          });
        });

        // Reset form and modal content when the Add button is clicked
        openPopup.addEventListener("click", () => {
          modal.style.display = "flex";

          // Change modal title and button text back to "Add Instructor"
          document.querySelector(".modal-header h2").innerHTML =
            '<i class="bx bx-plus"></i> Add Instructor';
          document.querySelector(".btn-add").textContent = "Add";

          // Clear form fields
          document.querySelector(".add-instructor-form").reset();

          // Function to load instructors from the server
async function loadInstructors() {
  try {
    const response = await fetch('/api/instructors'); // Adjust the URL to your API endpoint
    const instructors = await response.json(); // Parse the JSON response

    const tableBody = document.getElementById('instructors-table-body');
    tableBody.innerHTML = ''; // Clear existing rows

    // Append new rows
    instructors.forEach((instructor, index) => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${index + 1}</td>
        <td>${instructor.instructorId}</td>
        <td>${instructor.funame}</td>
        <td>${instructor.subjects}</td>
        <td>${instructor.password}</td>
        <td>
          <i class="bx bx-show"></i>
          <i class="bx bx-edit"></i>
          <i class="bx bx-trash"></i>
        </td>
      `;
      tableBody.appendChild(row);
    });

    // Update the footer with the number of entries
    document.getElementById('table-footer').innerText = `Showing ${instructors.length} entries`;

  } catch (error) {
    console.error('Error loading instructors:', error);
  }
}

// Call loadInstructors on page load
document.addEventListener('DOMContentLoaded', loadInstructors);

        });

        
      </script>

      <!-- MAIN -->
    </section>
    <!-- NAVBAR -->

    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script src="/js/dashboard.js"></script>
  </body>
</html>
